/******************************************************************************
//                    OOP244NAA - WS06 Part 2 @ Oct 26 2022
//Full Name  : Alex Chu
//Student ID#: 153954219
//Email      : kchu30@myseneca.ca
//
//I have done all the coding by myself and only copied the code
//that my professor provided to complete my workshops and assdignments.
******************************************************************************/

The Lab is more difficult than the DIY part, which DIY took me around 6 hours to finish it including debugging and after finished the Lab it was easier on DIY because there are some codes I can reuse.

DIY:
I am getting used to the operator overload now, which is fortunate for me because I have a better big picture and understand when to use it, I even created an extra "operator=" on the DIY for the Fruit type, apart from the Basket type. There wasn't a clear guideline on the copy assignment operator =, and people could have been confused and could not imagine what is going on. I looked into the main.cpp and tried to understand it, so I see there is Basket A = Basket B, but at the same time for the overloaded operator += , it is supposed to add a Fruit object to the Basket class therefore we will need another copy assignment operator =.

I have been generating runtime error during testing and compiling, at the end of the test. It was the line "b3=b2", when b3 is not empty and b2 is in empty state. I realised the error was due to deallocate() which happens when it deletes the Basket resource m_fruits. I do not exactly know the reason, because I was trying to deallocate the memory of b3 so that I can assign empty state to it. However, after I played around with the code and put the deallocate() after setting it to empty state, it works!

LAB:
I read the ICT notes to work on the Lab part, there are some good examples on the copy constructor. The instruction on Github did not mention we have to assign the new m_numCount to the source's m_numCount, only instructed us to do the m_numbers part. I was able to figure it out because without numCount it would not work.

The next issue I had was the output of "Content of filename". The numbers showed like "6, 12.2, 3..." which is different from what I wanted with the formatting and precision. So I invested in my code and realised apart from putting the formatting on display(), I also need that for save()! The things have only been displaying with the format, but when the file was saved all the formatting were gone. Then I did the same on the save() function and make sure it writes in the file with formatting.

There was a memory leak when I submit it on matrix, it was just one block. After investigation, I found out I did not deallocate the m_filename and it was fine after deleting it.
